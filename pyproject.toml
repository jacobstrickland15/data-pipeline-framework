[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "data-pipeline"
version = "0.1.0"
description = "Flexible data pipeline for large dataset analysis and visualization"
authors = [{name = "Data Pipeline Team"}]
requires-python = ">=3.9"
license = {text = "MIT"}

dependencies = [
    # Core data processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "pyarrow>=12.0.0",
    
    # Database connectivity
    "psycopg2-binary>=2.9.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.11.0",
    
    # AWS/Cloud storage
    "boto3>=1.28.0",
    
    # Configuration and utilities
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.4.0",
    "PyYAML>=6.0",
    
    # Data profiling and validation
    "great-expectations>=0.17.0",
    "ydata-profiling>=4.0.0",
    
    # Visualization
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    
    # Logging and monitoring
    "structlog>=23.1.0",
]

[project.optional-dependencies]
spark = [
    "pyspark>=3.4.0",
    "findspark>=2.0.1",
]

dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipykernel>=6.25.0",
    "ipywidgets>=8.1.0",
]

all = [
    "data-pipeline[spark,dev,jupyter]"
]

[project.scripts]
data-pipeline = "data_pipeline.cli.main:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=src/data_pipeline --cov-report=html --cov-report=term-missing"
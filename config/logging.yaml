version: 1
disable_existing_loggers: false

formatters:
  structured:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(name)s %(levelname)s %(message)s %(module)s %(funcName)s %(lineno)d'
  
  standard:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  
  detailed:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(module)s:%(funcName)s:%(lineno)d - %(message)s'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: structured
    stream: ext://sys.stdout
  
  file_info:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: structured
    filename: logs/pipeline.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
  
  file_error:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/errors.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
  
  file_debug:
    class: logging.handlers.TimedRotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/debug.log
    when: midnight
    interval: 1
    backupCount: 7
    encoding: utf8

loggers:
  data_pipeline:
    level: INFO
    handlers: [console, file_info, file_error]
    propagate: false
  
  data_pipeline.core:
    level: INFO
    handlers: [file_info]
    propagate: true
  
  data_pipeline.sources:
    level: DEBUG
    handlers: [file_debug]
    propagate: true
  
  data_pipeline.processors:
    level: INFO
    handlers: [file_info]
    propagate: true
  
  data_pipeline.storage:
    level: INFO
    handlers: [file_info]
    propagate: true
  
  data_pipeline.utils:
    level: INFO
    handlers: [file_info]
    propagate: true
  
  data_pipeline.streaming:
    level: INFO
    handlers: [file_info]
    propagate: true
  
  data_pipeline.transformations:
    level: INFO
    handlers: [file_info]
    propagate: true
  
  data_pipeline.monitoring:
    level: INFO
    handlers: [console, file_info]
    propagate: true
  
  sqlalchemy.engine:
    level: WARNING
    handlers: [file_info]
    propagate: true
  
  kafka:
    level: INFO
    handlers: [file_info]
    propagate: true
  
  redis:
    level: WARNING
    handlers: [file_info]
    propagate: true

root:
  level: INFO
  handlers: [console, file_info, file_error]